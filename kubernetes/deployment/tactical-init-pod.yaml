apiVersion: v1
kind: Pod
metadata:
  namespace: tacticalrmm
  labels:
    app: tacticalrmm
    network/api-db: "true"
    network/proxy: "true"
    service: tactical-init
  name: tactical-init
spec:
  containers:
    - args:
        - tactical-init
      image: tacticalrmm/tactical:0.14.1
      name: trmm-init
      env:
        - name: API_HOST
          value: api.rmm.mydomain.com
        - name: APP_HOST
          value: rmm.mydomain.com
        - name: MESH_HOST
          value: mesh.rmm.mydomain.com
        - name: MESH_WS_URL
          value: ws://tactical-meshcentral:4443
        - name: MESH_USER
          value: meshuser
        - name: POSTGRES_HOST
          value: 10.137.88.210
        - name: POSTGRES_PASS
          valueFrom:
            secretKeyRef:
              name: tactical-secrets
              key: postgres-password
        - name: POSTGRES_USER
          value: tacticalrmm
        - name: POSTGRES_DB
          value: tacticalrmm
        - name: TRMM_PASS
          valueFrom:
            secretKeyRef:
              name: tactical-secrets
              key: trmm-password
        - name: TRMM_USER
          value: tacticalrmm
        - name: CERT_PUB_PATH
          value: /etc/ssl/certs/custom/tls.crt
        - name: CERT_PRIV_PATH
          value: /etc/ssl/certs/custom/tls.key
      resources: {}
      volumeMounts:
        - mountPath: /opt/tactical
          name: tactical-data
        - mountPath: /etc/ssl/certs/custom
          name: tactical-certs
  restartPolicy: OnFailure
  volumes:
    - name: tactical-data
      persistentVolumeClaim:
        claimName: tactical-data
    - name: tactical-certs
      secret:
        secretName: rmm-mydomain-com-tls
status: {}
